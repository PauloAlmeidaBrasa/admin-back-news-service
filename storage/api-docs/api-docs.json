{
    "openapi": "3.0.0",
    "info": {
        "title": "Admin-News-Backend-Api",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get JWT token",
                "operationId": "bae68d1c55329ecb6e41f48285840c8f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "paulo@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 86400
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "Paulo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/category/add-category": {
            "post": {
                "tags": [
                    "add-category"
                ],
                "summary": "Add a new category",
                "description": "Create a new category. Requires JWT authentication.",
                "operationId": "ab76a89fe04aa30e99e0441c07ae3862",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "category"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "category title",
                                        "type": "string",
                                        "example": "category 1"
                                    },
                                    "category": {
                                        "description": "category ID",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "type": "string",
                                                    "example": "categoryAdded"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/category/get-category": {
            "get": {
                "tags": [
                    "get-category"
                ],
                "summary": "Get all registered category who belong to the same client_id of the requester",
                "operationId": "b1a293f764d3208f315e5afebc86473e",
                "responses": {
                    "200": {
                        "description": "List of category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "category 1"
                                                            },
                                                            "subtitle": {
                                                                "type": "string",
                                                                "example": "subtitle 1"
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "example": "text 1"
                                                            },
                                                            "category": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/category/update": {
            "patch": {
                "tags": [
                    "Update categorys"
                ],
                "summary": "Update category data",
                "operationId": "ef94f661e45eb784c877c18af0e869f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_ID"
                                ],
                                "properties": {
                                    "category_ID": {
                                        "description": "category ID to update",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "name": {
                                        "description": "Optional new category name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Optional new category email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Optional new password",
                                        "type": "string",
                                        "example": "categoryecurePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "category ID 123 updated successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "category service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/category/delete": {
            "post": {
                "tags": [
                    "Delete"
                ],
                "summary": "Delete a category by ID",
                "description": "Send the category_ID in the request body to delete the specified category.",
                "operationId": "e0f228ada4f2b021fda0084c0dc10ca4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_ID"
                                ],
                                "properties": {
                                    "category_ID": {
                                        "description": "category's ID",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "category ID 123 removed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "category service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "category not found or the category you are trying to delete doesnt belong to your same client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "category not found or the category you are trying to delete doesnt belong to your same client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/news/add-news": {
            "post": {
                "tags": [
                    "add-news"
                ],
                "summary": "Add a new news",
                "description": "Create a new news. Requires JWT authentication.",
                "operationId": "a7391001ff66934e5beff30f9ccab02c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "category"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "news title",
                                        "type": "string",
                                        "example": "news 1"
                                    },
                                    "category": {
                                        "description": "category ID",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "news": {
                                                    "type": "string",
                                                    "example": "newsAdded"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/news/get-news": {
            "get": {
                "tags": [
                    "get-news"
                ],
                "summary": "Get all registered news who belong to the same client_id of the requester",
                "operationId": "0d7a984e52107198fb1ea422dc0650c9",
                "responses": {
                    "200": {
                        "description": "List of news",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "news": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "news 1"
                                                            },
                                                            "subtitle": {
                                                                "type": "string",
                                                                "example": "subtitle 1"
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "example": "text 1"
                                                            },
                                                            "category": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/news/update": {
            "patch": {
                "tags": [
                    "Update newss"
                ],
                "summary": "Update news data",
                "operationId": "600ea158d7d47d19e8c8e8db4b383aa2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "news_ID"
                                ],
                                "properties": {
                                    "news_ID": {
                                        "description": "news ID to update",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "name": {
                                        "description": "Optional new news name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Optional new news email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Optional new password",
                                        "type": "string",
                                        "example": "newSecurePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "news updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "news ID 123 updated successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "news service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/news/delete": {
            "post": {
                "tags": [
                    "Delete news"
                ],
                "summary": "Delete a news by ID",
                "description": "Send the news_ID in the request body to delete the specified news.",
                "operationId": "b812c7101e7dff82d293eb90dc2c389d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "news_ID"
                                ],
                                "properties": {
                                    "news_ID": {
                                        "description": "news's ID",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "news ID 123 removed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "news service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "news not found or the news you are trying to delete doesnt belong to your same client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "news not found or the news you are trying to delete doesnt belong to your same client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/get-users": {
            "get": {
                "tags": [
                    "get-users"
                ],
                "summary": "Get all registered users who belong to the same client_id of the requester",
                "operationId": "8d71886425572abe344fe2dab69b78b2",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Paulo"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "paulo@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/add-user": {
            "post": {
                "tags": [
                    "add-user"
                ],
                "summary": "Add a new user",
                "description": "Create a new user. Requires JWT authentication.",
                "operationId": "997c37c0ca0db6c702fb22ea64a03473",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Userâ€™s email address",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "Userâ€™s password",
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "name": {
                                        "description": "Userâ€™s name",
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "string",
                                                    "example": "userAdded"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/delete": {
            "post": {
                "tags": [
                    "delete-user"
                ],
                "summary": "Delete a user by ID",
                "description": "Send the user_ID in the request body to delete the specified user.",
                "operationId": "ff26ce4bcf8608cd17883fafeb3f64b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_ID"
                                ],
                                "properties": {
                                    "user_ID": {
                                        "description": "User's ID",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "âœ… Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "User ID 123 removed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User not found or the user you are trying to delete doesnt belong to your same client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found or the user you are trying to delete doesnt belong to your same client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/update": {
            "patch": {
                "tags": [
                    "Update users"
                ],
                "summary": "Update user data",
                "operationId": "a9c14ed35cfedbed0d1091dd6cb1b208",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_ID"
                                ],
                                "properties": {
                                    "user_ID": {
                                        "description": "User ID to update",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "name": {
                                        "description": "Optional new user name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Optional new user email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Optional new password",
                                        "type": "string",
                                        "example": "newSecurePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "User ID 123 updated successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "add-category",
            "description": "add-category"
        },
        {
            "name": "get-category",
            "description": "get-category"
        },
        {
            "name": "Update categorys",
            "description": "Update categorys"
        },
        {
            "name": "Delete",
            "description": "Delete"
        },
        {
            "name": "add-news",
            "description": "add-news"
        },
        {
            "name": "get-news",
            "description": "get-news"
        },
        {
            "name": "Update newss",
            "description": "Update newss"
        },
        {
            "name": "Delete news",
            "description": "Delete news"
        },
        {
            "name": "get-users",
            "description": "get-users"
        },
        {
            "name": "add-user",
            "description": "add-user"
        },
        {
            "name": "delete-user",
            "description": "delete-user"
        },
        {
            "name": "Update users",
            "description": "Update users"
        }
    ]
}